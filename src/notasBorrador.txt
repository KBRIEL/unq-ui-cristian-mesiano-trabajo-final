App.css------------------------------



/* .board {
  background-color: rgb(188, 185, 231);
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(8, 1fr);
  grid-gap: 10px;
  max-width: 1000px;
  max-height: 1000px;
  margin: 100px auto;
  color: bisque;
}
.memo-block {
  
  cursor: pointer;
  aspect-ratio: 1 / 1;
}

.memo-block-front, .memo-block-back {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  border-radius: 4px;
}

.memo-block-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

.memo-block-flipped {
  transform: rotateY(180deg);
}

.memo-block-back {
  background-color: #EF626C;
  transform: rotateY(180deg);
  box-shadow: 5px 5px 10px 0px rgb(0 0 0 / 50%);
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 55px;
}

.memo-block-front {
  background-color: #84DCCF;
} */

/*--------MappCard------------------------------------------*/
import React,{useEffect,useState} from 'react';
import ImageList from './Image';
import note2 from '../images/note2.png';
import Card from './Card';

const numeroDeCartas =64;


const mezclar =(lista)=>{
    
    for (var i = lista.lengtn -1; i >0; i --){
// debe tenerun listado de numeros y ser eliminados de las probabilidades
     const nroAleatrio = Math.floor(Math.random()*(i+1));

       [lista[i], lista[nroAleatrio]] = [lista[nroAleatrio],lista[i]];
    };
    return lista;
  }

const MapCard=(props)=>{
    const iconos = ImageList();
    var [cartasIniciales,setCartasI]=useState([note2,note2,note2,note2,note2,note2,note2,note2]);
    var [cartasFinales,setCartasF]=useState([]);

    useEffect(()=>{
        // setCartasI(this.props.cartas)


    },[])

    for(var i=0; i<cartasIniciales.length;i++){
        const index= Math.floor(Math.random()*iconos.length);
        
        const carta={
            'image': cartasIniciales[i],
            'posicion': i,
            'descubierta':false
        }
        cartasFinales.push(carta);
        cartasFinales.push({...carta});// es un objeto diferente a carta
    }
    
    // return mezclar(cartasFinales);
  
    return (

        <div className='container5'>
            {cartasIniciales.map(e=><Card className='Card' src={e}/>)}
        </div>
    );

}

export default MapCard;

---------------card---------------------------------------------------------

import '../App.css';
import React,{useEffect,useState} from 'react';
import unq from  '../images/unq.png';//editar





const Card=(props)=>{
    var obj= props.obj;
    var callback =props.callback;
    const [dorso, setDorso]=useState(unq);

    const clickHandler=()=>{
        
        callback(obj);
        // esUnAcierto();

    }

    // const esUnAcierto=()=>{
    //     if(obj.flip==true){
    //         setDorso(obj.image);
    //     }

    // }

 
    
return(
    <div>
        <div className="carta-holder">
         <div className="main">
        <div className="carta" onClick={clickHandler}>
            <div className="carta-dorso">
                <img src={dorso} className='img'/>
            </div>
            <div className="carta-frente">
                <img src={obj.image}className='img' />
            </div>
        </div>
    </div>
    </div>

    </div>
    );
}

export default Card;